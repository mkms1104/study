<included>
    <property name="LOG_GROUP_NAME" value="webview"/>
    <property name="LOG_STREAM_PREFIX" value="[%d{yyyy-MM-dd HH:mm:ss}]"/>
    <property name="ACCESS_KEY_ID" value="AKIA3GARC7SWEK4QXS76"/>
    <property name="SECRET_ACCESS_KEY" value="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"/>

    <!-- 현재 활성화된 profile -->
    <springProperty scope="context" name="ACTIVE_PROFILE" source="spring.config.activate.on-profile" defaultValue="dev"/>

    <appender name="ASYNC_AWS_LOGS" class="ca.pjer.logback.AwsLogsAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>

        <!-- Nice layout pattern -->
        <layout>
            <pattern>${LOG_PATTERN}</pattern>
        </layout>

        <!-- Hardcoded Log Group Name -->
        <logGroupName>/${ACTIVE_PROFILE}/${LOG_GROUP_NAME}</logGroupName>

        <logStreamName>${timestamp}</logStreamName>

        <!-- Log Stream Name UUID Prefix -->
        <!-- <logStreamUuidPrefix>${timestamp}/</logStreamUuidPrefix> -->

        <!-- Hardcoded AWS region -->
        <!-- So even when running inside an AWS instance in us-west-1, logs will go to us-west-2 -->
        <logRegion>ap-northeast-2</logRegion>

        <!-- Maximum number of events in each batch (50 is the default) -->
        <!-- will flush when the event queue has 50 elements, even if still in quiet time (see maxFlushTimeMillis) -->
        <maxBatchLogEvents>50</maxBatchLogEvents>

        <!-- Maximum quiet time in millisecond (0 is the default) -->
        <!-- will flush when met, even if the batch size is not met (see maxBatchLogEvents) -->
        <maxFlushTimeMillis>30000</maxFlushTimeMillis>

        <!-- Maximum block time in millisecond (5000 is the default) -->
        <!-- when > 0: this is the maximum time the logging thread will wait for the logger, -->
        <!-- when == 0: the logging thread will never wait for the logger, discarding events while the queue is full -->
        <maxBlockTimeMillis>5000</maxBlockTimeMillis>

        <!-- Retention value for log groups, 0 for infinite see -->
        <!-- https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_PutRetentionPolicy.html for other -->
        <!-- possible values -->
        <retentionTimeDays>0</retentionTimeDays>

        <!-- Use custom credential instead of DefaultCredentialsProvider -->
        <accessKeyId>${ACCESS_KEY_ID}</accessKeyId>
        <secretAccessKey>${SECRET_ACCESS_KEY}</secretAccessKey>
    </appender>
</included>